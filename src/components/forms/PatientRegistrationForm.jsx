import React, { useState, useEffect } from "react";
import { Button } from "../common/Button";

// --- START: Age Calculation Helper ---
// ðŸ›‘ Reliable, timezone-independent age calculation
const calculateAge = (dob) => {
Â  if (!dob) return "";
Â  
Â  const today = new Date();
Â  const currentYear = today.getFullYear();
Â  const currentMonth = today.getMonth() + 1; // Month is 0-indexed
Â  const currentDay = today.getDate();

Â  const [birthYear, birthMonth, birthDay] = dob.split('-').map(Number);
Â  
Â  let age = currentYear - birthYear;
Â  
Â  // Adjust age if the birthday hasn't occurred this year
Â  if (
Â  Â  currentMonth < birthMonth || 
Â  Â  (currentMonth === birthMonth && currentDay < birthDay)
Â  ) {
Â  Â  age--;
Â  }

Â  return age >= 0 ? age : ""; // Return empty string for future dates or invalid DOB
};
// --- END: Age Calculation Helper ---


// Mock API functions for local development (retained for context)
const createPatient = async (data) => {
Â  Â  return new Promise(resolve => setTimeout(() => resolve({ 
Â  Â  Â  Â  ...data,
Â  Â  Â  Â  id: Date.now(), 
Â  Â  Â  Â  upid: "UPID" + Date.now(),
Â  Â  Â  Â  status: data.status || "OPD",
Â  Â  }), 500));
};

const updatePatient = async (id, data) => {
Â  Â  return new Promise(resolve => setTimeout(() => resolve({ 
Â  Â  Â  Â  ...data,
Â  Â  Â  Â  id: id,
Â  Â  Â  Â  upid: data.upid,
Â  Â  Â  Â  status: data.status,
Â  Â  }), 500));
};


export function PatientRegistrationForm({ patient, onSuccess, onCancel }) {
Â  const [loading, setLoading] = useState(false);
Â  const [error, setError] = useState("");
Â  const [activeTab, setActiveTab] = useState("basic"); 

Â  const [formData, setFormData] = useState({
Â  Â  // Basic Info
Â  Â  firstName: patient?.firstName || "",
Â  Â  lastName: patient?.lastName || "",
Â  Â  dateOfBirth: patient?.dateOfBirth || "",
Â  Â  gender: patient?.gender || "MALE",
Â  Â  phone: patient?.phone || "",
Â  Â  email: patient?.email || "",
Â  Â  address: patient?.address || "",
Â  Â  // Initialize age using the calculation if DOB is present
Â  Â  age: patient?.dateOfBirth ? calculateAge(patient.dateOfBirth) : (patient?.age || ""),
Â  Â  nationalId: patient?.nationalId || "",
Â  Â  fatherName: patient?.fatherName || "", // âœ… Father's Name

Â  Â  // Medical Info
Â  Â  height: patient?.height || "",
Â  Â  weight: patient?.weight || "",
Â  Â  bloodGroup: patient?.bloodGroup || "",
Â  Â  allergies: patient?.allergies || "",
Â  Â  currentTreatment: patient?.currentTreatment || "",
Â  Â  medicalHistory: patient?.medicalHistory || "",

Â  Â  // Insurance & Emergency
Â  Â  insuranceProvider: patient?.insuranceProvider || "",
Â  Â  insurancePolicyNumber: patient?.insurancePolicyNumber || "",
Â  Â  emergencyContactName: patient?.emergencyContactName || "",
Â  Â  emergencyContactPhone: patient?.emergencyContactPhone || "",
Â  });

Â  // ðŸ’¡ Effect to automatically calculate and update age when DOB changes
Â  useEffect(() => {
Â  Â  if (formData.dateOfBirth) {
Â  Â  Â  const newAge = calculateAge(formData.dateOfBirth);
Â  Â  Â  setFormData(prev => ({
Â  Â  Â  Â  ...prev,
Â  Â  Â  Â  age: newAge,
Â  Â  Â  }));
Â  Â  } else if (formData.age !== "") {
Â  Â  Â  // Clear age if DOB is cleared, but only if it was automatically calculated (optional)
Â  Â  Â  setFormData(prev => ({ ...prev, age: "" }));
Â  Â  }
Â  }, [formData.dateOfBirth]);


Â  const handleChange = (e) => {
Â  Â  setFormData((prev) => ({
Â  Â  Â  ...prev,
Â  Â  Â  [e.target.name]: e.target.value,
Â  Â  }));
Â  };

Â  const handleSubmit = async (e) => {
Â  Â  e.preventDefault();
Â  Â  setError("");
Â  Â  setLoading(true);

Â  Â  const isEditMode = !!patient;
Â  Â  const apiCall = isEditMode ? updatePatient : createPatient;
Â  Â  const idToUpdate = isEditMode ? patient.id : undefined;

Â  Â  try {
Â  Â  Â  // Data sent to API (using snake_case convention)
Â  Â  Â  const patientData = {
Â  Â  Â  Â  first_name: formData.firstName,
Â  Â  Â  Â  last_name: formData.lastName,
Â  Â  Â  Â  date_of_birth: formData.dateOfBirth,
Â  Â  Â  Â  gender: formData.gender,
Â  Â  Â  Â  phone: formData.phone,
Â  Â  Â  Â  email: formData.email || undefined,
Â  Â  Â  Â  address: formData.address || undefined,
Â  Â  Â  Â  // ðŸ›‘ Use the calculated age, or manually entered age, if any
Â  Â  Â  Â  age: formData.age ? parseInt(formData.age) : undefined, 
Â  Â  Â  Â  national_id: formData.nationalId || undefined,
Â  Â  Â  Â  father_name: formData.fatherName || undefined, // âœ… Father's Name included
Â  Â  Â  Â  
Â  Â  Â  Â  height: formData.height ? parseInt(formData.height) : undefined,
Â  Â  Â  Â  weight: formData.weight ? parseInt(formData.weight) : undefined,
Â  Â  Â  Â  blood_group: formData.bloodGroup || undefined,
Â  Â  Â  Â  allergies: formData.allergies || undefined,
Â  Â  Â  Â  current_treatment: formData.currentTreatment || undefined,
Â  Â  Â  Â  medical_history: formData.medicalHistory || undefined,
Â  Â  Â  Â  
Â  Â  Â  Â  insurance_provider: formData.insuranceProvider || undefined,
Â  Â  Â  Â  insurance_policy_number: formData.insurancePolicyNumber || undefined,
Â  Â  Â  Â  emergency_contact_name: formData.emergencyContactName || undefined,
Â  Â  Â  Â  emergency_contact_phone: formData.emergencyContactPhone || undefined,
Â  Â  Â  Â  status: patient?.status || "OPD",
Â  Â  Â  Â  upid: patient?.upid || undefined,
Â  Â  Â  };

Â  Â  Â  let result;
Â  Â  Â  if (isEditMode) {
Â  Â  Â  Â  Â  result = await apiCall(idToUpdate, patientData); 
Â  Â  Â  } else {
Â  Â  Â  Â  Â  result = await apiCall(patientData);
Â  Â  Â  }
Â  Â  Â  
Â  Â  Â  if (onSuccess) onSuccess(result); 

Â  Â  } catch (err) {
Â  Â  Â  const errorMessage =
Â  Â  Â  Â  err.response?.data?.message ||
Â  Â  Â  Â  err.message ||
Â  Â  Â  Â  "Failed to save patient record";
Â  Â  Â  setError(errorMessage);
Â  Â  } finally {
Â  Â  Â  setLoading(false);
Â  Â  }
Â  };

Â  return (
Â  Â  <form onSubmit={handleSubmit} className="space-y-6">
Â  Â  Â  {error && (
Â  Â  Â  Â  <div className="p-3 bg-red-50 border border-red-500 rounded-lg text-red-600 text-sm">
Â  Â  Â  Â  Â  {error}
Â  Â  Â  Â  </div>
Â  Â  Â  )}

Â  Â  Â  {/* Tabs (No Change) */}
Â  Â  Â  <div className="border-b border-gray-200">
Â  Â  Â  Â  <nav className="-mb-px flex space-x-8">
Â  Â  Â  Â  Â  <button
Â  Â  Â  Â  Â  Â  type="button"
Â  Â  Â  Â  Â  Â  onClick={() => setActiveTab("basic")}
Â  Â  Â  Â  Â  Â  className={`py-2 px-1 border-b-2 font-medium text-sm ${
Â  Â  Â  Â  Â  Â  Â  activeTab === "basic"
Â  Â  Â  Â  Â  Â  Â  Â  ? "border-blue-500 text-blue-600"
Â  Â  Â  Â  Â  Â  Â  Â  : "border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300"
Â  Â  Â  Â  Â  Â  }`}
Â  Â  Â  Â  Â  >
Â  Â  Â  Â  Â  Â  Basic Information
Â  Â  Â  Â  Â  </button>
Â  Â  Â  Â  Â  <button
Â  Â  Â  Â  Â  Â  type="button"
Â  Â  Â  Â  Â  Â  onClick={() => setActiveTab("medical")}
Â  Â  Â  Â  Â  Â  className={`py-2 px-1 border-b-2 font-medium text-sm ${
Â  Â  Â  Â  Â  Â  Â  activeTab === "medical"
Â  Â  Â  Â  Â  Â  Â  Â  ? "border-blue-500 text-blue-600"
Â  Â  Â  Â  Â  Â  Â  Â  : "border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300"
Â  Â  Â  Â  Â  Â  }`}
Â  Â  Â  Â  Â  >
Â  Â  Â  Â  Â  Â  Medical Information
Â  Â  Â  Â  Â  </button>
Â  Â  Â  Â  Â  <button
Â  Â  Â  Â  Â  Â  type="button"
Â  Â  Â  Â  Â  Â  onClick={() => setActiveTab("insurance")}
Â  Â  Â  Â  Â  Â  className={`py-2 px-1 border-b-2 font-medium text-sm ${
Â  Â  Â  Â  Â  Â  Â  activeTab === "insurance"
Â  Â  Â  Â  Â  Â  Â  Â  ? "border-blue-500 text-blue-600"
Â  Â  Â  Â  Â  Â  Â  Â  : "border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300"
Â  Â  Â  Â  Â  Â  }`}
Â  Â  Â  Â  Â  >
Â  Â  Â  Â  Â  Â  Insurance & Emergency
Â  Â  Â  Â  Â  </button>
Â  Â  Â  Â  </nav>
Â  Â  Â  </div>

Â  Â  Â  {/* Basic Information */}
Â  Â  Â  {activeTab === "basic" && (
Â  Â  Â  Â  <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
Â  Â  Â  Â  Â  {/* First Name */}
Â  Â  Â  Â  Â  <div>
Â  Â  Â  Â  Â  Â  <label className="block text-sm font-medium text-gray-700 mb-1">
Â  Â  Â  Â  Â  Â  Â  First Name <span className="text-red-500">*</span>
Â  Â  Â  Â  Â  Â  </label>
Â  Â  Â  Â  Â  Â  <input
Â  Â  Â  Â  Â  Â  Â  type="text"
Â  Â  Â  Â  Â  Â  Â  name="firstName"
Â  Â  Â  Â  Â  Â  Â  value={formData.firstName}
Â  Â  Â  Â  Â  Â  Â  onChange={handleChange}
Â  Â  Â  Â  Â  Â  Â  required
Â  Â  Â  Â  Â  Â  Â  className="w-full px-4 py-2 rounded-lg border border-gray-300 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent"
Â  Â  Â  Â  Â  Â  />
Â  Â  Â  Â  Â  </div>

Â  Â  Â  Â  Â  {/* Last Name */}
Â  Â  Â  Â  Â  <div>
Â  Â  Â  Â  Â  Â  <label className="block text-sm font-medium text-gray-700 mb-1">
Â  Â  Â  Â  Â  Â  Â  Last Name <span className="text-red-500">*</span>
Â  Â  Â  Â  Â  Â  </label>
Â  Â  Â  Â  Â  Â  <input
Â  Â  Â  Â  Â  Â  Â  type="text"
Â  Â  Â  Â  Â  Â  Â  name="lastName"
Â  Â  Â  Â  Â  Â  Â  value={formData.lastName}
Â  Â  Â  Â  Â  Â  Â  onChange={handleChange}
Â  Â  Â  Â  Â  Â  Â  required
Â  Â  Â  Â  Â  Â  Â  className="w-full px-4 py-2 rounded-lg border border-gray-300 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent"
Â  Â  Â  Â  Â  Â  />
Â  Â  Â  Â  Â  </div>
Â  Â  Â  Â  Â  
Â  Â  Â  Â  Â  {/* Father's Name (No Change) */}
Â  Â  Â  Â  Â  <div>
Â  Â  Â  Â  Â  Â  <label className="block text-sm font-medium text-gray-700 mb-1">
Â  Â  Â  Â  Â  Â  Â  Father's Name
Â  Â  Â  Â  Â  Â  </label>
Â  Â  Â  Â  Â  Â  <input
Â  Â  Â  Â  Â  Â  Â  type="text"
Â  Â  Â  Â  Â  Â  Â  name="fatherName"
Â  Â  Â  Â  Â  Â  Â  value={formData.fatherName}
Â  Â  Â  Â  Â  Â  Â  onChange={handleChange}
Â  Â  Â  Â  Â  Â  Â  className="w-full px-4 py-2 rounded-lg border border-gray-300 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent"
Â  Â  Â  Â  Â  Â  />
Â  Â  Â  Â  Â  </div>

Â  Â  Â  Â  Â  {/* Date of Birth */}
Â  Â  Â  Â  Â  <div>
Â  Â  Â  Â  Â  Â  <label className="block text-sm font-medium text-gray-700 mb-1">
Â  Â  Â  Â  Â  Â  Â  Date of Birth <span className="text-red-500">*</span>
Â  Â  Â  Â  Â  Â  </label>
Â  Â  Â  Â  Â  Â  <input
Â  Â  Â  Â  Â  Â  Â  type="date"
Â  Â  Â  Â  Â  Â  Â  name="dateOfBirth"
Â  Â  Â  Â  Â  Â  Â  value={formData.dateOfBirth}
Â  Â  Â  Â  Â  Â  Â  onChange={handleChange}
Â  Â  Â  Â  Â  Â  Â  max={new Date().toISOString().split('T')[0]} // Prevents selecting future dates
Â  Â  Â  Â  Â  Â  Â  required
Â  Â  Â  Â  Â  Â  Â  className="w-full px-4 py-2 rounded-lg border border-gray-300 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent"
Â  Â  Â  Â  Â  Â  />
Â  Â  Â  Â  Â  </div>

Â  Â  Â  Â  Â  {/* Age - NOW READ-ONLY and AUTO-CALCULATED */}
Â  Â  Â  Â  Â  <div>
Â  Â  Â  Â  Â  Â  <label className="block text-sm font-medium text-gray-700 mb-1">
Â  Â  Â  Â  Â  Â  Â  Age (Auto-Calculated)
Â  Â  Â  Â  Â  Â  </label>
Â  Â  Â  Â  Â  Â  <input
Â  Â  Â  Â  Â  Â  Â  type="text" // Changed to text as it's read-only
Â  Â  Â  Â  Â  Â  Â  name="age"
Â  Â  Â  Â  Â  Â  Â  value={formData.age}
Â  Â  Â  Â  Â  Â  Â  readOnly // ðŸ›‘ Made read-only
Â  Â  Â  Â  Â  Â  Â  placeholder="Calculated from DOB"
Â  Â  Â  Â  Â  Â  Â  className="w-full px-4 py-2 rounded-lg border border-gray-300 bg-gray-50 text-gray-500 focus:outline-none"
Â  Â  Â  Â  Â  Â  />
Â  Â  Â  Â  Â  </div>

Â  Â  Â  Â  Â  {/* Gender (No Change) */}
Â  Â  Â  Â  Â  <div>
Â  Â  Â  Â  Â  Â  <label className="block text-sm font-medium text-gray-700 mb-1">
Â  Â  Â  Â  Â  Â  Â  Gender <span className="text-red-500">*</span>
Â  Â  Â  Â  Â  Â  </label>
Â  Â  Â  Â  Â  Â  <select
Â  Â  Â  Â  Â  Â  Â  name="gender"
Â  Â  Â  Â  Â  Â  Â  value={formData.gender}
Â  Â  Â  Â  Â  Â  Â  onChange={handleChange}
Â  Â  Â  Â  Â  Â  Â  required
Â  Â  Â  Â  Â  Â  Â  className="w-full px-4 py-2 rounded-lg border border-gray-300 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent"
Â  Â  Â  Â  Â  Â  >
Â  Â  Â  Â  Â  Â  Â  <option value="MALE">Male</option>
Â  Â  Â  Â  Â  Â  Â  <option value="FEMALE">Female</option>
Â  Â  Â  Â  Â  Â  Â  <option value="OTHER">Other</option>
Â  Â  Â  Â  Â  Â  </select>
Â  Â  Â  Â  Â  </div>

Â  Â  Â  Â  Â  {/* Phone (No Change) */}
Â  Â  Â  Â  Â  <div>
Â  Â  Â  Â  Â  Â  <label className="block text-sm font-medium text-gray-700 mb-1">
Â  Â  Â  Â  Â  Â  Â  Phone <span className="text-red-500">*</span>
Â  Â  Â  Â  Â  Â  </label>
Â  Â  Â  Â  Â  Â  <input
Â  Â  Â  Â  Â  Â  Â  type="tel"
Â  Â  Â  Â  Â  Â  Â  name="phone"
Â  Â  Â  Â  Â  Â  Â  value={formData.phone}
Â  Â  Â  Â  Â  Â  Â  onChange={handleChange}
Â  Â  Â  Â  Â  Â  Â  required
Â  Â  Â  Â  Â  Â  Â  className="w-full px-4 py-2 rounded-lg border border-gray-300 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent"
Â  Â  Â  Â  Â  Â  />
Â  Â  Â  Â  Â  </div>

Â  Â  Â  Â  Â  {/* Email (No Change) */}
Â  Â  Â  Â  Â  <div>
Â  Â  Â  Â  Â  Â  <label className="block text-sm font-medium text-gray-700 mb-1">
Â  Â  Â  Â  Â  Â  Â  Email
Â  Â  Â  Â  Â  Â  </label>
Â  Â  Â  Â  Â  Â  <input
Â  Â  Â  Â  Â  Â  Â  type="email"
Â  Â  Â  Â  Â  Â  Â  name="email"
Â  Â  Â  Â  Â  Â  Â  value={formData.email}
Â  Â  Â  Â  Â  Â  Â  onChange={handleChange}
Â  Â  Â  Â  Â  Â  Â  className="w-full px-4 py-2 rounded-lg border border-gray-300 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent"
Â  Â  Â  Â  Â  Â  />
Â  Â  Â  Â  Â  </div>

Â  Â  Â  Â  Â  {/* National ID (No Change) */}
Â  Â  Â  Â  Â  <div>
Â  Â  Â  Â  Â  Â  <label className="block text-sm font-medium text-gray-700 mb-1">
Â  Â  Â  Â  Â  Â  Â  National ID
Â  Â  Â  Â  Â  Â  </label>
Â  Â  Â  Â  Â  Â  <input
Â  Â  Â  Â  Â  Â  Â  type="text"
Â  Â  Â  Â  Â  Â  Â  name="nationalId"
Â  Â  Â  Â  Â  Â  Â  value={formData.nationalId}
Â  Â  Â  Â  Â  Â  Â  onChange={handleChange}
Â  Â  Â  Â  Â  Â  Â  className="w-full px-4 py-2 rounded-lg border border-gray-300 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent"
Â  Â  Â  Â  Â  Â  />
Â  Â  Â  Â  Â  </div>

Â  Â  Â  Â  Â  {/* Address (No Change) */}
Â  Â  Â  Â  Â  <div className="md:col-span-2">
Â  Â  Â  Â  Â  Â  <label className="block text-sm font-medium text-gray-700 mb-1">
Â  Â  Â  Â  Â  Â  Â  Address
Â  Â  Â  Â  Â  Â  </label>
Â  Â  Â  Â  Â  Â  <textarea
Â  Â  Â  Â  Â  Â  Â  name="address"
Â  Â  Â  Â  Â  Â  Â  value={formData.address}
Â  Â  Â  Â  Â  Â  Â  onChange={handleChange}
Â  Â  Â  Â  Â  Â  Â  rows="2"
Â  Â  Â  Â  Â  Â  Â  className="w-full px-4 py-2 rounded-lg border border-gray-300 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent"
Â  Â  Â  Â  Â  Â  />
Â  Â  Â  Â  Â  </div>
Â  Â  Â  Â  </div>
Â  Â  Â  )}

Â  Â  Â  {/* Medical Info (No Change) */}
Â  Â  Â  {activeTab === "medical" && (
Â  Â  Â  Â  <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
Â  Â  Â  Â  Â  {/* Height */}
Â  Â  Â  Â  Â  <div>
Â  Â  Â  Â  Â  Â  <label className="block text-sm font-medium text-gray-700 mb-1">
Â  Â  Â  Â  Â  Â  Â  Height (cm)
Â  Â  Â  Â  Â  Â  </label>
Â  Â  Â  Â  Â  Â  <input
Â  Â  Â  Â  Â  Â  Â  type="number"
Â  Â  Â  Â  Â  Â  Â  name="height"
Â  Â  Â  Â  Â  Â  Â  value={formData.height}
Â  Â  Â  Â  Â  Â  Â  onChange={handleChange}
Â  Â  Â  Â  Â  Â  Â  className="w-full px-4 py-2 rounded-lg border border-gray-300 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent"
Â  Â  Â  Â  Â  Â  />
Â  Â  Â  Â  Â  </div>

Â  Â  Â  Â  Â  {/* Weight */}
Â  Â  Â  Â  Â  <div>
Â  Â  Â  Â  Â  Â  <label className="block text-sm font-medium text-gray-700 mb-1">
Â  Â  Â  Â  Â  Â  Â  Weight (kg)
Â  Â  Â  Â  Â  Â  </label>
Â  Â  Â  Â  Â  Â  <input
Â  Â  Â  Â  Â  Â  Â  type="number"
Â  Â  Â  Â  Â  Â  Â  name="weight"
Â  Â  Â  Â  Â  Â  Â  value={formData.weight}
Â  Â  Â  Â  Â  Â  Â  onChange={handleChange}
Â  Â  Â  Â  Â  Â  Â  className="w-full px-4 py-2 rounded-lg border border-gray-300 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent"
Â  Â  Â  Â  Â  Â  />
Â  Â  Â  Â  Â  </div>

Â  Â  Â  Â  Â  {/* Blood Group */}
Â  Â  Â  Â  Â  <div>
Â  Â  Â  Â  Â  Â  <label className="block text-sm font-medium text-gray-700 mb-1">
Â  Â  Â  Â  Â  Â  Â  Blood Group
Â  Â  Â  Â  Â  Â  </label>
Â  Â  Â  Â  Â  Â  <select
Â  Â  Â  Â  Â  Â  Â  name="bloodGroup"
Â  Â  Â  Â  Â  Â  Â  value={formData.bloodGroup}
Â  Â  Â  Â  Â  Â  Â  onChange={handleChange}
Â  Â  Â  Â  Â  Â  Â  className="w-full px-4 py-2 rounded-lg border border-gray-300 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent"
Â  Â  Â  Â  Â  Â  >
Â  Â  Â  Â  Â  Â  Â  <option value="">Select Blood Group</option>
Â  Â  Â  Â  Â  Â  Â  <option value="A+">A+</option>
Â  Â  Â  Â  Â  Â  Â  <option value="A-">A-</option>
Â  Â  Â  Â  Â  Â  Â  <option value="B+">B+</option>
Â  Â  Â  Â  Â  Â  Â  <option value="B-">B-</option>
Â  Â  Â  Â  Â  Â  Â  <option value="AB+">AB+</option>
Â  Â  Â  Â  Â  Â  Â  <option value="AB-">AB-</option>
Â  Â  Â  Â  Â  Â  Â  <option value="O+">O+</option>
Â  Â  Â  Â  Â  Â  Â  <option value="O-">O-</option>
Â  Â  Â  Â  Â  Â  </select>
Â  Â  Â  Â  Â  </div>

Â  Â  Â  Â  Â  {/* Current Treatment */}
Â  Â  Â  Â  Â  <div>
Â  Â  Â  Â  Â  Â  <label className="block text-sm font-medium text-gray-700 mb-1">
Â  Â  Â  Â  Â  Â  Â  Current Treatment
Â  Â  Â  Â  Â  Â  </label>
Â  Â  Â  Â  Â  Â  <input
Â  Â  Â  Â  Â  Â  Â  type="text"
Â  Â  Â  Â  Â  Â  Â  name="currentTreatment"
Â  Â  Â  Â  Â  Â  Â  value={formData.currentTreatment}
Â  Â  Â  Â  Â  Â  Â  onChange={handleChange}
Â  Â  Â  Â  Â  Â  Â  className="w-full px-4 py-2 rounded-lg border border-gray-300 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent"
Â  Â  Â  Â  Â  Â  />
Â  Â  Â  Â  Â  </div>

Â  Â  Â  Â  Â  {/* Allergies */}
Â  Â  Â  Â  Â  <div className="md:col-span-2">
Â  Â  Â  Â  Â  Â  <label className="block text-sm font-medium text-gray-700 mb-1">
Â  Â  Â  Â  Â  Â  Â  Allergies
Â  Â  Â  Â  Â  Â  </label>
Â  Â  Â  Â  Â  Â  <textarea
Â  Â  Â  Â  Â  Â  Â  name="allergies"
Â  Â  Â  Â  Â  Â  Â  value={formData.allergies}
Â  Â  Â  Â  Â  Â  Â  onChange={handleChange}
Â  Â  Â  Â  Â  Â  Â  rows="2"
Â  Â  Â  Â  Â  Â  Â  placeholder="List any known allergies..."
Â  Â  Â  Â  Â  Â  Â  className="w-full px-4 py-2 rounded-lg border border-gray-300 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent"
Â  Â  Â  Â  Â  Â  />
Â  Â  Â  Â  Â  </div>

Â  Â  Â  Â  Â  {/* Medical History */}
Â  Â  Â  Â  Â  <div className="md:col-span-2">
Â  Â  Â  Â  Â  Â  <label className="block text-sm font-medium text-gray-700 mb-1">
Â  Â  Â  Â  Â  Â  Â  Medical History
Â  Â  Â  Â  Â  Â  </label>
Â  Â  Â  Â  Â  Â  <textarea
Â  Â  Â  Â  Â  Â  Â  name="medicalHistory"
Â  Â  Â  Â  Â  Â  Â  value={formData.medicalHistory}
Â  Â  Â  Â  Â  Â  Â  onChange={handleChange}
Â  Â  Â  Â  Â  Â  Â  rows="4"
Â  Â  Â  Â  Â  Â  Â  placeholder="Enter medical history, past conditions, surgeries, etc..."
Â  Â  Â  Â  Â  Â  Â  className="w-full px-4 py-2 rounded-lg border border-gray-300 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent"
Â  Â  Â  Â  Â  Â  />
Â  Â  Â  Â  Â  </div>
Â  Â  Â  Â  </div>
Â  Â  Â  )}

Â  Â  Â  {/* Insurance (No Change) */}
Â  Â  Â  {activeTab === "insurance" && (
Â  Â  Â  Â  <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
Â  Â  Â  Â  Â  {/* Insurance Provider */}
Â  Â  Â  Â  Â  <div>
Â  Â  Â  Â  Â  Â  <label className="block text-sm font-medium text-gray-700 mb-1">
Â  Â  Â  Â  Â  Â  Â  Insurance Provider
Â  Â  Â  Â  Â  Â  </label>
Â  Â  Â  Â  Â  Â  <input
Â  Â  Â  Â  Â  Â  Â  type="text"
Â  Â  Â  Â  Â  Â  Â  name="insuranceProvider"
Â  Â  Â  Â  Â  Â  Â  value={formData.insuranceProvider}
Â  Â  Â  Â  Â  Â  Â  onChange={handleChange}
Â  Â  Â  Â  Â  Â  Â  className="w-full px-4 py-2 rounded-lg border border-gray-300 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent"
Â  Â  Â  Â  Â  Â  />
Â  Â  Â  Â  Â  </div>

Â  Â  Â  Â  Â  {/* Policy Number */}
Â  Â  Â  Â  Â  <div>
Â  Â  Â  Â  Â  Â  <label className="block text-sm font-medium text-gray-700 mb-1">
Â  Â  Â  Â  Â  Â  Â  Policy Number
Â  Â  Â  Â  Â  Â  </label>
Â  Â  Â  Â  Â  Â  <input
Â  Â  Â  Â  Â  Â  Â  type="text"
Â  Â  Â  Â  Â  Â  Â  name="insurancePolicyNumber"
Â  Â  Â  Â  Â  Â  Â  value={formData.insurancePolicyNumber}
Â  Â  Â  Â  Â  Â  Â  onChange={handleChange}
Â  Â  Â  Â  Â  Â  Â  className="w-full px-4 py-2 rounded-lg border border-gray-300 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent"
Â  Â  Â  Â  Â  Â  />
Â  Â  Â  Â  Â  </div>

Â  Â  Â  Â  Â  {/* Emergency Name */}
Â  Â  Â  Â  Â  <div>
Â  Â  Â  Â  Â  Â  <label className="block text-sm font-medium text-gray-700 mb-1">
Â  Â  Â  Â  Â  Â  Â  Emergency Contact Name
Â  Â  Â  Â  Â  Â  </label>
Â  Â  Â  Â  Â  Â  <input
Â  Â  Â  Â  Â  Â  Â  type="text"
Â  Â  Â  Â  Â  Â  Â  name="emergencyContactName"
Â  Â  Â  Â  Â  Â  Â  value={formData.emergencyContactName}
Â  Â  Â  Â  Â  Â  Â  onChange={handleChange}
Â  Â  Â  Â  Â  Â  Â  className="w-full px-4 py-2 rounded-lg border border-gray-300 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent"
Â  Â  Â  Â  Â  Â  />
Â  Â  Â  Â  Â  </div>

Â  Â  Â  Â  Â  {/* Emergency Phone */}
Â  Â  Â  Â  Â  <div>
Â  Â  Â  Â  Â  Â  <label className="block text-sm font-medium text-gray-700 mb-1">
Â  Â  Â  Â  Â  Â  Â  Emergency Contact Phone
Â  Â  Â  Â  Â  Â  </label>
Â  Â  Â  Â  Â  Â  <input
Â  Â  Â  Â  Â  Â  Â  type="tel"
Â  Â  Â  Â  Â  Â  Â  name="emergencyContactPhone"
Â  Â  Â  Â  Â  Â  Â  value={formData.emergencyContactPhone}
Â  Â  Â  Â  Â  Â  Â  onChange={handleChange}
Â  Â  Â  Â  Â  Â  Â  className="w-full px-4 py-2 rounded-lg border border-gray-300 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent"
Â  Â  Â  Â  Â  Â  />
Â  Â  Â  Â  Â  </div>
Â  Â  Â  Â  </div>
Â  Â  Â  )}

Â  Â  Â  {/* Actions (No Change) */}
Â  Â  Â  <div className="flex gap-3 justify-end pt-4 border-t">
Â  Â  Â  Â  {onCancel && (
Â  Â  Â  Â  Â  <Button
Â  Â  Â  Â  Â  Â  type="button"
Â  Â  Â  Â  Â  Â  variant="outline"
Â  Â  Â  Â  Â  Â  onClick={onCancel}
Â  Â  Â  Â  Â  Â  disabled={loading}
Â  Â  Â  Â  Â  >
Â  Â  Â  Â  Â  Â  Cancel
Â  Â  Â  Â  Â  </Button>
Â  Â  Â  Â  )}
Â  Â  Â  Â  <Button type="submit" disabled={loading}>
Â  Â  Â  Â  Â  {loading
Â  Â  Â  Â  Â  Â  ? "Saving..."
Â  Â  Â  Â  Â  Â  : patient
Â  Â  Â  Â  Â  Â  ? "Update Patient"
Â  Â  Â  Â  Â  Â  : "Register Patient"}
Â  Â  Â  Â  </Button>
Â  Â  Â  </div>
Â  Â  </form>
Â  );
}